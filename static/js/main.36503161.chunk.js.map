{"version":3,"sources":["components/ContactForm.js","firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","InitialFieldValues","nome","idade","estadocivil","cpf","cidade","estado","useState","values","setValues","useEffect","currentId","contactObjects","handlerInputChange","e","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","placeholder","onChange","required","minLength","maxLength","type","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","Contacts","setContactObjects","setCurrentId","firebaseDb","child","on","snapshot","val","id","obj","push","err","console","log","set","scope","Object","keys","map","onClick","key","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36503161.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/style.css'\r\n\r\n\r\n\r\nconst ContactForm = (props) => {\r\n    const InitialFieldValues = {\r\n        nome: '',\r\n        idade: '',\r\n        estadocivil: '',\r\n        cpf: '',\r\n        cidade: '',\r\n        estado: ''\r\n\r\n    }\r\n\r\n    var [values, setValues] = useState(InitialFieldValues)\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '') {\r\n            setValues({\r\n                ...InitialFieldValues\r\n            })\r\n        }\r\n        else {\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n        }\r\n    }, [props.currentId, props.contactObjects])\r\n\r\n    const handlerInputChange = e => {\r\n        var { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        props.addOrEdit(values);\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit} >\r\n            <input className=\"form-control\" placeholder=\"Nome\" name=\"nome\"\r\n                value={values.nome}\r\n                onChange={handlerInputChange}\r\n                required\r\n            />\r\n            <input className=\"form-control\" placeholder=\"Idade\" name=\"idade\"\r\n                value={values.idade}\r\n                onChange={handlerInputChange}\r\n                required\r\n            />\r\n            <input className=\"form-control\" placeholder=\"Estado Civil\" name=\"estadocivil\"\r\n                value={values.estadocivil}\r\n                onChange={handlerInputChange}\r\n                required\r\n            />\r\n            <input className=\"form-control\" placeholder=\"CPF\" name=\"cpf\"\r\n                value={values.cpf}\r\n                onChange={handlerInputChange}\r\n                minLength=\"1\"\r\n                maxLength=\"11\"\r\n                required\r\n            />\r\n            <input className=\"form-control\" placeholder=\"Cidade\" name=\"cidade\"\r\n                value={values.cidade}\r\n                onChange={handlerInputChange}\r\n                required\r\n            />\r\n            <input className=\"form-control\" placeholder=\"Estado\" name=\"estado\"\r\n                value={values.estado}\r\n                onChange={handlerInputChange}\r\n                required\r\n            />\r\n            <input type=\"submit\" value={props.currentId == '' ? \"Save\" : \"Update\"} className=\"btn btn-primary btn-block btn_bluegray\" />\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default ContactForm;","import * as firebase from 'firebase';\r\n\r\nvar firebaseConfig = { \r\n    apiKey: \"AIzaSyA72KXb0dwEpb53xsaawei_Y562GFNG2xQ\",\r\n    authDomain: \"people-fb.firebaseapp.com\",\r\n    databaseURL: \"https://people-fb-default-rtdb.firebaseio.com\",\r\n    projectId: \"people-fb\",\r\n    storageBucket: \"people-fb.appspot.com\",\r\n    messagingSenderId: \"473790780071\",\r\n    appId: \"1:473790780071:web:c558471210285cd7dcc182\",\r\n    measurementId: \"G-X59H1WLMJ0\"\r\n  };\r\n  var fireDb = firebase.default.initializeApp(firebaseConfig);\r\n\r\n  export default fireDb.database().ref();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from \"./ContactForm\"\r\nimport firebaseDb from '../firebase';\r\nimport '../css/style.css'\r\n\r\nconst Contacts = () => {\r\n\r\n    var [contactObjects, setContactObjects] = useState({})\r\n    var [currentId, setCurrentId] = useState('')\r\n\r\n    useEffect(() => {\r\n        firebaseDb.child('pessoas').on('value', snapshot => {\r\n            if (snapshot.val() != null)\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            else {\r\n                setContactObjects({})\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const addOrEdit = obj => {\r\n        if (currentId == '')\r\n            firebaseDb.child('pessoas').push(\r\n                obj,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                    else {\r\n                        setCurrentId('')\r\n                    }\r\n                }\r\n            )\r\n        else\r\n            firebaseDb.child('pessoas/' + currentId).set(\r\n                obj,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                    else {\r\n                        setCurrentId('')\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    const onDelete = key => {\r\n        if (window.confirm('Tem certeza que deseja deletar isto?'))\r\n            firebaseDb.child('pessoas/' + key).remove(\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                    else {\r\n                        setCurrentId('')\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <section id=\"content\">\r\n            <h1>Cadastro</h1>\r\n            <ContactForm {...({ addOrEdit, currentId, contactObjects })} />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Nome</th>\r\n                        <th scope=\"col\">Idade</th>\r\n                        <th scope=\"col\">Estado Civil</th>\r\n                        <th scope=\"col\">Cpf</th>\r\n                        <th scope=\"col\">Cidade</th>\r\n                        <th scope=\"col\">Estado</th>\r\n                        <th scope=\"col\">Actions</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Object.keys(contactObjects).map(id => {\r\n                            return (\r\n\r\n                                <tr key={id}>\r\n\r\n                                    <td scope=\"row\">\r\n                                        {contactObjects[id].nome}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contactObjects[id].idade}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contactObjects[id].estadocivil}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contactObjects[id].cpf}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contactObjects[id].cidade}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contactObjects[id].estado}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <a className=\"btn text-primary\" onClick={() => { setCurrentId(id) }}>\r\n                                            <i className=\"fas fa-pencil-alt bluegray\"></i>\r\n                                        </a>\r\n                                        <a className=\"btn text-danger\" onClick={() => onDelete(id)}>\r\n                                            <i className=\"fas fa-trash-alt\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Contacts;","import './App.css';\nimport Contacts from './components/Contacts';\n\nfunction App() {\n  return (\n   \n      <Contacts />\n     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}